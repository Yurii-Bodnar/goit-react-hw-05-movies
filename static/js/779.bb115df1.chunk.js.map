{"version":3,"file":"static/js/779.bb115df1.chunk.js","mappings":"0OAGaA,E,QAAOC,GAAAA,GAAH,iH,SC2BjB,EAxBgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OAPAE,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAwBL,GAASM,MAAK,SAAAC,GAAI,OAAIR,EAAWQ,EAAKC,QAApB,GAC3C,GAAE,CAACR,IAEJE,QAAQC,IAAIL,IAEV,SAACH,EAAD,UACsB,IAAnBG,EAAQW,QAAe,qDAAmCX,EAAQY,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GACzF,OACE,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EAKZ,KAGN,C,4MC1BKC,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAsB,mCAAG,WAAOC,EAAOC,GAAd,kGAEXH,IAAAA,IAAU,iBAAkB,CACjDI,OAAQ,CACNF,MAAAA,EACAC,KAAAA,EACAE,QAASN,KANqB,uBAE1BP,EAF0B,EAE1BA,KAF0B,kBAS3BA,GAT2B,sCAWlCL,QAAQC,IAAR,MAXkC,8DAAH,wDAgBtBkB,EAAwB,mCAAG,+GAEbN,IAAAA,IAAU,uBAAwB,CACvDI,OAAQ,CACNC,QAASN,EACTI,KAAK,KAL2B,uBAE5BX,EAF4B,EAE5BA,KAF4B,kBAS7BA,GAT6B,oGAAH,qDAcxBe,EAAuB,mCAAG,WAAMtB,GAAN,kGAEZe,IAAAA,IAAA,gBAAmBf,GAAW,CACnDmB,OAAQ,CACNC,QAASN,EACTS,SAAU,WALqB,uBAE3BhB,EAF2B,EAE3BA,KAF2B,kBAS5BA,GAT4B,oGAAH,sDAevBiB,EAAoB,mCAAG,WAAMxB,GAAN,kGAETe,IAAAA,IAAA,gBAAmBf,EAAnB,YAAsC,CAC3DmB,OAAQ,CACNC,QAASN,EACTS,SAAU,WALkB,uBAExBhB,EAFwB,EAExBA,KAFwB,kBASzBA,GATyB,oGAAH,sDAepBF,EAAuB,mCAAG,WAAML,GAAN,kGAEZe,IAAAA,IAAA,iBAAoBf,EAApB,YAAuC,CAC5DmB,OAAQ,CACNC,QAASN,EACTS,SAAU,QACVL,KAAM,KANyB,uBAE3BX,EAF2B,EAE3BA,KAF2B,kBAS5BA,GAT4B,oGAAH,qD,sBCjErB,SAASkB,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHK,MAAOH,OAAOC,OAAOH,MAG3B,C","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","utils/SerchMoviesAPI.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-wrap: wrap;\ngap: 16px;\nmargin: 0 auto;\njustify-content: center;\n`\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getRequestMoviesReviews } from 'utils/SerchMoviesAPI';\nimport { List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  console.log(movieId);\n\n  useEffect(() => {\n    getRequestMoviesReviews(movieId).then(data => setReviews(data.results));\n  }, [movieId]);\n\n  console.log(reviews);\n  return (\n    <List>\n      {reviews.length === 0 ? <p>We don`t have any reviews</p> : reviews.map(({ author, content, id }) => {\n        return (\n          <li key={id}>\n            <h2>{author}</h2>\n            <p>{content}</p>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n\nexport default Reviews;\n\n// {reviews.map({author,content, id}) =>{\n//     return <li key={id}>\n//         <h2>{author}</h2>\n//         <p>{content}</p>\n//     </li>\n// } }\n","import axios from 'axios';\n\nconst API_KEY = '96f98372ec97554f75b9ec4b9ecd00d9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getRequestSearchMovies = async (query, page) => {\n  try {\n    const { data } = await axios.get('/search/movie/', {\n      params: {\n        query,\n        page,\n        api_key: API_KEY,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getRequestTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('/trending/movie/week', {\n      params: {\n        api_key: API_KEY,\n        page:1,\n      },\n    });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getRequestMoviesDitails = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getRequestMoviesCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getRequestMoviesReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["List","styled","useState","reviews","setReviews","movieId","useParams","console","log","useEffect","getRequestMoviesReviews","then","data","results","length","map","author","content","id","API_KEY","axios","getRequestSearchMovies","query","page","params","api_key","getRequestTrendingMovies","getRequestMoviesDitails","language","getRequestMoviesCast","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}