{"version":3,"file":"static/js/143.8d266e3a.chunk.js","mappings":"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","sources":["components/SerchFormMovie/SerchFormMovie.styled.js","components/SerchFormMovie/SerchFormMovie.jsx","components/CardSearchMovies/CardSearchMovies.styled.js","components/CardSearchMovies/CardSearchMovies.jsx","components/PaginationMovies/PaginationMovies.jsx","page/Movies/Movies.jsx","utils/SerchMoviesAPI.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n    width: 380px;\n    height: 45px;\n   \n    border-radius: 5px;\n    margin-right: 10px;\n    transition: 1s;\n    font-size: 28px;\n    border: none;\n    border-bottom: 1px solid black;\n    background: inherit;\n    box-shadow: 2px 2px 4px;\n\n&:hover,\n&:focus{\n    outline: 2px solid orange;\n}    \n`\n\nexport const WrapperButton = styled.div``\nexport const Button = styled.button`\nborder: 1px solid black;\n    width: 70px;\n    height: 44px;\n    color: #ffae06;\n    background-color: inherit;\n    border-radius: 10px;\n    background-image: url(/srs/images/search-svgrepo-com.svg);\n    font-size: 17px;\n    font-weight: bold;\n    text-align: center;\n    box-shadow: 1px 1px 12px;\n\n`\n","import { useState } from \"react\";\nimport { Button, Input, Wrapper } from \"./SerchFormMovie.styled\";\n\nconst SerchFormMovie = ({setSearch}) => {\n    const [searchInput, setSearchInput] = useState(\"\");\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (searchInput.trim() === '') {\n            alert('Please fill in the search field');\n            return;\n          }\n        setSearch({ query: searchInput ,page: 1});\n      };\n    const handleChange = (e)=> {\n        setSearchInput(e.target.value)\n    }\n    return ( \n        <form onSubmit={handleSubmit}>\n            <Wrapper>\n        <Input\n          type=\"text\"\n          name=\"searchInput\"\n          value={searchInput}\n          onChange={handleChange}\n        />\n        \n        <Button type=\"submit\">Search</Button>\n       \n        </Wrapper>\n      </form>\n      );\n}\n \nexport default SerchFormMovie;","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 300px);\n  gap: 20px;\n  margin: 0 auto;\n  justify-content: center;\n  margin-top: 16px;\n`;\n\nexport const Item = styled.li`\n  text-align: center;\n  border-radius: 5px;\n`;\n\nexport const Img = styled.img`\n  border-radius: 5px;\n  box-shadow: 0 0 19px;\n  height: 425px;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  font-size: 17px;\n  font-weight: bolder;\n`;\n","import {  useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Img, Item, List,Link } from './CardSearchMovies.styled';\n\n\n\nconst CardSearchMovies = ({ movies }) => {\n    const location = useLocation()\n  return (\n    <List>\n      {movies.map(\n        ({\n          id,\n          poster_path,\n          title,\n          original_title,\n          release_date,\n          vote_average,\n        }) => {\n          return (\n            <Item key={id}>\n              <Link to={`/movies/${id}`} state={location}>\n                <Img\n                  src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n                  alt={original_title}\n                />\n                <p>{title}</p>\n                <p>{release_date}</p>\n                <p>{(vote_average).toFixed(1)}</p>\n              </Link>\n            </Item>\n          );\n        }\n      )}\n    </List>\n  );\n};\n\nCardSearchMovies.propTypes = {\n    movies:PropTypes.arrayOf(PropTypes.object)\n}\n\nexport default CardSearchMovies;\n\n\n","import * as React from 'react';\nimport Pagination from '@mui/material/Pagination';\nimport Stack from '@mui/material/Stack';\nimport PropTypes from 'prop-types';\n\nconst PaginationMovies = ({ page, setSearch, totalPages, query }) => {\n\n  return (\n    <Stack spacing={2}>\n      <Pagination\n        count={totalPages}\n        shape=\"rounded\"\n        page={Number(page)}\n        onChange={(e, value) => {\n         setSearch({ query, page: value })\n        }}\n        sx={{\n          display: 'flex',\n          justifyContent: 'center',\n          marginBottom: '10px',\n          marginTop: '10px',\n        }}\n        size=\"large\"\n      />\n    </Stack>\n  );\n};\n\nPaginationMovies.propTypes = {\n  page:PropTypes.string.isRequired,\n  totalPages:PropTypes.number.isRequired,\n  query:PropTypes.string.isRequired,\n}\n\nexport default PaginationMovies;\n\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect } from 'react';\nimport SerchFormMovie from 'components/SerchFormMovie/SerchFormMovie';\nimport { getRequestSearchMovies } from 'utils/SerchMoviesAPI';\nimport CardSearchMovies from 'components/CardSearchMovies/CardSearchMovies';\nimport PaginationMovies from 'components/PaginationMovies/PaginationMovies';\n\nconst Movies = () => {\n  const [search, setSearch] = useSearchParams();\n  const [movies, setMovie] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n\n  const query = search.get('query');\n  const page = search.get('page');\n\n  useEffect(() => {\n    if (!query) return;\n    getRequestSearchMovies(query, page).then(({ results, total_pages }) => {\n      setMovie(results);\n      setTotalPages(total_pages);\n    });\n  }, [query, page]);\n \n  return (\n    <>\n      <SerchFormMovie setSearch={setSearch} />\n      <CardSearchMovies movies={movies} />\n      {query?<PaginationMovies page={page}  setSearch={setSearch} totalPages={totalPages} query={query}/>:null}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '96f98372ec97554f75b9ec4b9ecd00d9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getRequestSearchMovies = async (query, page) => {\n  try {\n    const { data } = await axios.get('/search/movie/', {\n      params: {\n        query,\n        page,\n        api_key: API_KEY,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getRequestTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('/trending/movie/week', {\n      params: {\n        api_key: API_KEY,\n        page:1,\n      },\n    });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getRequestMoviesDitails = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getRequestMoviesCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getRequestMoviesReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["Wrapper","styled","Input","Button","setSearch","useState","searchInput","setSearchInput","onSubmit","e","preventDefault","trim","query","page","alert","type","name","value","onChange","target","List","Item","Img","Link","NavLink","movies","location","useLocation","map","id","poster_path","title","original_title","release_date","vote_average","to","state","src","alt","toFixed","totalPages","Stack","spacing","Pagination","count","shape","Number","sx","display","justifyContent","marginBottom","marginTop","size","useSearchParams","search","setMovie","setTotalPages","get","useEffect","getRequestSearchMovies","then","results","total_pages","API_KEY","axios","params","api_key","data","console","log","getRequestTrendingMovies","getRequestMoviesDitails","movieId","language","getRequestMoviesCast","getRequestMoviesReviews"],"sourceRoot":""}