{"version":3,"file":"static/js/247.ad0e8aec.chunk.js","mappings":"4MA0CA,UAnCa,WACX,OAAyBA,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAqBH,GAASI,MAAK,gBAAGC,EAAH,EAAGA,KAAH,OAAcN,EAAQM,EAAtB,GACpC,GAAE,CAACL,KAGF,0BACE,wBACGF,EAAMQ,KAAI,SAAAD,GACT,OACE,0BACyB,OAAtBA,EAAKE,cACJ,gBAAKC,IAAKC,EAAkBC,IAAI,iBAEhC,gBACEF,IAAG,0CAAqCH,EAAKE,cAC7CG,IAAKL,EAAKM,iBAId,uBAAIN,EAAKO,QACT,uBAAIP,EAAKQ,cAXFR,EAAKS,GAcjB,OAIR,C,4MCtCKC,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAsB,mCAAG,WAAOC,EAAOC,GAAd,kGAEXH,IAAAA,IAAU,iBAAkB,CACjDI,OAAQ,CACNF,MAAAA,EACAC,KAAAA,EACAE,QAASN,KANqB,uBAE1BO,EAF0B,EAE1BA,KAF0B,kBAS3BA,GAT2B,sCAWlCC,QAAQC,IAAR,MAXkC,8DAAH,wDAgBtBC,EAAwB,mCAAG,+GAEbT,IAAAA,IAAU,uBAAwB,CACvDI,OAAQ,CACNC,QAASN,EACTI,KAAK,KAL2B,uBAE5BG,EAF4B,EAE5BA,KAF4B,kBAS7BA,GAT6B,oGAAH,qDAcxBI,EAAuB,mCAAG,WAAM1B,GAAN,kGAEZgB,IAAAA,IAAA,gBAAmBhB,GAAW,CACnDoB,OAAQ,CACNC,QAASN,EACTY,SAAU,WALqB,uBAE3BL,EAF2B,EAE3BA,KAF2B,kBAS5BA,GAT4B,oGAAH,sDAevBnB,EAAoB,mCAAG,WAAMH,GAAN,kGAETgB,IAAAA,IAAA,gBAAmBhB,EAAnB,YAAsC,CAC3DoB,OAAQ,CACNC,QAASN,EACTY,SAAU,WALkB,uBAExBL,EAFwB,EAExBA,KAFwB,kBASzBA,GATyB,oGAAH,sDAepBM,EAAuB,mCAAG,WAAM5B,GAAN,kGAEZgB,IAAAA,IAAA,iBAAoBhB,EAApB,YAAuC,CAC5DoB,OAAQ,CACNC,QAASN,EACTY,SAAU,QACVR,KAAM,KANyB,uBAE3BG,EAF2B,EAE3BA,KAF2B,kBAS5BA,GAT4B,oGAAH,qD","sources":["components/Cast/Cast.jsx","utils/SerchMoviesAPI.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n// import { NavLink } from 'react-router-dom';\nimport { getRequestMoviesCast } from 'utils/SerchMoviesAPI';\nimport actorPlaceholder from './../../images/No_Image_Available.jpg'\n\nconst Cast = () => {\n  const [casts, setCast] = useState([]);\n\n  const { movieId } = useParams();\n\n\n  useEffect(() => {\n    getRequestMoviesCast(movieId).then(({ cast }) => setCast(cast));\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {casts.map(cast => {\n          return (\n            <li key={cast.id}>\n              {cast.profile_path === null ? (\n                <img src={actorPlaceholder} alt=\"placeholder\" />\n              ) : (\n                <img\n                  src={`https://image.tmdb.org/t/p/w300/${cast.profile_path}`}\n                  alt={cast.original_name}\n                />\n              )}\n\n              <p>{cast.name}</p>\n              <p>{cast.character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '96f98372ec97554f75b9ec4b9ecd00d9';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getRequestSearchMovies = async (query, page) => {\n  try {\n    const { data } = await axios.get('/search/movie/', {\n      params: {\n        query,\n        page,\n        api_key: API_KEY,\n      },\n    });\n    return data;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n};\n\nexport const getRequestTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('/trending/movie/week', {\n      params: {\n        api_key: API_KEY,\n        page:1,\n      },\n    });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getRequestMoviesDitails = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getRequestMoviesCast = async movieId => {\n  try {\n    const { data } = await axios.get(`movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n    // console.log(data);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const getRequestMoviesReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n      },\n    });\n    return data;\n  } catch (error) {\n    throw error;\n  }\n};\n"],"names":["useState","casts","setCast","movieId","useParams","useEffect","getRequestMoviesCast","then","cast","map","profile_path","src","actorPlaceholder","alt","original_name","name","character","id","API_KEY","axios","getRequestSearchMovies","query","page","params","api_key","data","console","log","getRequestTrendingMovies","getRequestMoviesDitails","language","getRequestMoviesReviews"],"sourceRoot":""}